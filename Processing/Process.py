## import modules
import pandas as pd
from Processing.Utility_Functions import Seperate_Data

##
emg_updown_value = emg_updown_list[0]
# emg_downup_value = emg_downup_list[0]

split_updown_value = split_updown_list[0]
split_downup_value = split_downup_list[0]

## devide the gait into subcycles
gait_event_devision = Seperate_Data.seperateGait(split_updown_value, window_size=512)

## divide the emg data into subcycles
seperated_emg_data = Seperate_Data.seperateEmgdata(emg_updown_value, gait_event_devision)


##
gait_event_list = []
emg_data_list = []
for i in range(len(emg_updown_list)):
    gait_event_devision = Seperate_Data.seperateGait(split_updown_list[i], window_size=512)
    gait_event_list.append(gait_event_devision)

    seperated_emg_data = Seperate_Data.seperateEmgdata(emg_updown_list[i], gait_event_devision)
    emg_data_list.append(seperated_emg_data)


##
emg_sample_extraction = {
            {
            'turnSSSS': [82500, 128758, 82500, 128758, 82500, 128758, 82500, 128758, 82500, 128758],
            'SSLW': [90565, 149219, 90565, 149219, 90565, 149219, 90565, 149219, 90565, 149219],
            'LW_1': [91210, 149893, 91210, 149893, 91210, 149893, 91210, 149893, 91210, 149893],
            'LWLW_1': [93010, 151800, 93010, 151800, 93010, 151800, 93010, 151800, 93010, 151800],
            'LW_2': [93841, 152590, 93841, 152590, 93841, 152590, 93841, 152590, 93841, 152590],
            'LWSD': [95627, 154156, 95627, 154156, 95627, 154156, 95627, 154156, 95627, 154156],
            'SD_1': [96404, 155000, 96404, 155000, 96404, 155000, 96404, 155000, 96404, 155000],
            'SDSD': [98254, 156700, 98254, 156700, 98254, 156700, 98254, 156700, 98254, 156700],
            'SD_2': [99124, 157645, 99124, 157645, 99124, 157645, 99124, 157645, 99124, 157645],
            'SDSS': [101031, 159567, 101031, 159567, 101031, 159567, 101031, 159567, 101031, 159567],
            'turnSDSA': [101760, 160320, 101760, 160320, 101760, 160320, 101760, 160320, 101760, 160320],
            'SSSA': [117344, 170611, 117344, 170611, 117344, 170611, 117344, 170611, 117344, 170611],
            'SA_1': [117963, 171286, 117963, 171286, 117963, 171286, 117963, 171286, 117963, 171286],
            'SASA': [119800, 173305, 119800, 173305, 119800, 173305, 119800, 173305, 119800, 173305],
            'SA_2': [120628, 174077, 120628, 174077, 120628, 174077, 120628, 174077, 120628, 174077],
            'SALW': [122727, 176016, 122727, 176016, 122727, 176016, 122727, 176016, 122727, 176016],
            'LW_3': [123501, 176716, 123501, 176716, 123501, 176716, 123501, 176716, 123501, 176716],
            'LWLW_2': [125153, 178618, 125153, 178618, 125153, 178618, 125153, 178618, 125153, 178618],
            'LW_4': [126039, 179573, 126039, 179573, 126039, 179573, 126039, 179573, 126039, 179573],
            'LWSS': [128450, 181869, 128450, 181869, 128450, 181869, 128450, 181869, 128450, 181869],

            'turnSSSS': [82500, 128758, 182500, 228758, 282500, 328758, 382500, 428758, 482500, 528758],
            'SSLW': [90565, 149219, 190565, 249219, 290565, 349219, 390565, 449219, 490565, 549219],
            'LW_1': [91210, 149893, 191210, 249893, 291210, 349893, 391210, 449893, 491210, 549893],
            'LWLW_1': [93010, 151800, 193010,251800, 293010, 351800, 393010, 451800, 493010, 551800],
            'LW_2': [93841, 152590, 193841, 252590, 293841, 352590, 393841, 452590, 493841, 552590],
            'LWSA': [95627, 154156, 195627, 254156, 295627, 354156, 395627, 454156, 495627, 554156],
            'SA_1': [96404, 155000, 196404, 255000, 296404, 355000, 396404, 455000, 496404, 555000],
            'SASA': [98254, 156700, 198254, 256700, 298254, 356700, 398254, 456700, 498254, 556700],
            'SA_2': [99124, 157645, 199124, 257645, 299124, 357645, 399124, 457645, 499124, 557645],
            'SASS': [101031, 159567, 201031, 259567, 301031, 359567, 401031, 459567, 501031, 559567],
            'turnSASD': [101760, 160320, 201760, 260320, 301760, 360320, 401760, 460320, 501760, 560320],
            'SSSD': [117344, 170611, 217344, 270611, 317344, 370611, 417344, 470611, 517344, 570611],
            'SD_1': [117963, 171286, 217963, 271286, 317963, 371286, 417963, 471286, 517963, 571286],
            'SDSD': [119800, 173305, 219800, 273305, 319800, 373305, 419800, 473305, 519800, 573305],
            'SD_2': [120628, 174077, 220628, 274077, 320628, 374077, 420628, 474077, 520628, 574077],
            'SDLW': [122727, 176016, 222727, 276016, 322727, 376016, 422727, 476016, 522727, 576016],
            'LW_3': [123501, 176716, 223501, 276716, 323501, 376716, 423501, 476716, 523501, 576716],
            'LWLW_2': [125153, 178618, 225153, 278618, 325153, 378618, 425153, 478618, 525153, 578618],
            'LW_4': [126039, 179573, 226039, 279573, 326039, 379573, 426039, 479573, 526039, 579573],
            'LWSS': [128450, 181869, 228450, 281869, 328450, 381869, 428450, 481869, 528450, 581869],

            }
        }